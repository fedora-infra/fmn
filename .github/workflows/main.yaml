name: CI
on: [push, pull_request, workflow_dispatch]
jobs:
  python-smoketests-ci:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    container: fedorapython/fedora-python-tox:latest
    steps:
      - uses: actions/checkout@v3

      - name: Install absolufy
        run: |
             python3 -m pip install absolufy-imports

      # Alembic imports its env.py file in a way that it canâ€™t do relative imports from outside the
      # fmn/database/migrations directory, therefore it has to use absolute imports.
      - name: Enforce relative imports in package (except Alembic migrations)
        run: >
             find fmn -name \*.py -a \! -path fmn/database/migrations/env.py -print0
             | xargs -0 absolufy-imports --never

      - name: Preserve absolute import in Alembic env.py file
        run: >
             absolufy-imports fmn/database/migrations/env.py

  backend-ci:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    container: fedorapython/fedora-python-tox:latest
    steps:
      - uses: actions/checkout@v3

      - name: Install RPM dependencies
        run: |
             dnf install -y krb5-devel libpq-devel

      - name: Install base Python dependencies
        run: |
             python3 -m pip install --upgrade tox

      - name: execute tox
        run: tox

  frontend-ci:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    container: fedorapython/fedora-python-tox:latest
    steps:
      - uses: actions/checkout@v3

      - name: Install the API
        run: |
          dnf install -y krb5-devel libpq-devel
          python3 -m pip install --upgrade poetry
          poetry install --extras api

      - name: Install npm & npx
        run: dnf install -y npm

      - name: Regenerate the typescript types
        run: |
          poetry run ./generate-typescript-types.py

      - name: install frontend
        run: |
             pushd frontend/
             npm install
             popd

      - name: run eslint
        run: |
             pushd frontend/
             npm run lint-check
             popd

      - name: run type-check
        run: |
             pushd frontend/
             npm run type-check
             popd

      - name: run type-check
        run: |
             pushd frontend/
             npm run test:unit -- run
             popd
