---
- name: Install database packages
  dnf:
      name: "{{ item }}"
      state: present
  with_items:
      - postgresql-server
      - postgresql-devel
      - postgresql
      - python-psycopg2

- name: Set up postgresql database
  command: postgresql-setup --initdb
  args:
      creates: /var/lib/pgsql/data/pg_hba.conf

- replace:
    dest: /var/lib/pgsql/data/pg_hba.conf
    regexp: "host    all             all             127.0.0.1/32            ident"
    replace: "host    all             all             127.0.0.1/32            trust"

- replace:
    dest: /var/lib/pgsql/data/pg_hba.conf
    regexp: "host    all             all             ::1/128                 ident"
    replace: "host    all             all             ::1/128                 trust"


- name: Start and enable postgresql
  service: name=postgresql state=restarted enabled=yes

- name: Create the database
  shell: runuser -l postgres -c 'createdb notifications' && touch /home/vagrant/.db-created
  args:
      creates: /home/vagrant/.db-created

- name: Create /home/vagrant/alembic.ini
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=/home/vagrant/devel/alembic.ini dest=/home/vagrant/alembic.ini remote_src=True

- name: Fix the migration location
  replace:
    dest: /home/vagrant/alembic.ini
    regexp: "^script_location = alembic*$"
    replace: "script_location = devel/alembic"

- name: Switch the database connection to postgres
  replace:
    dest: /home/vagrant/alembic.ini
    regexp: "^sqlalchemy.url = sqlite.*$"
    replace: "sqlalchemy.url = postgresql://postgres:anypasswordworkslocally@localhost/notifications"

- name: Create fmn database schema
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && workon fmn && fmn-createdb -c --with-dev-data"
