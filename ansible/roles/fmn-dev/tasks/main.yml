---

- name: Install helpful development packages
  dnf:
    state: present
    name: [
      git,
      python-virtualenvwrapper,
      vim-enhanced
    ]

- name: Install fmn system dependencies
  dnf:
    state: present
    name: [
      gcc,
      graphviz,
      libffi-devel,
      make,
      openssl-devel,
      python3-devel,
      rabbitmq-server,
      redhat-rpm-config,
      redis,
      swig,
      zeromq-devel,
      libpq-devel
    ]

# Add various helpful configuration files
- name: Install a custom bashrc
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=bashrc dest=/home/{{ ansible_env.SUDO_USER }}/.bashrc

- name: Install the message of the day
  copy: src=motd dest=/etc/motd

- name: Create fmn virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && mkvirtualenv fmn"
  args:
    creates: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/fmn

# For some reason, doing ``python setup.py develop`` fails to install
# Flask, whereas doing it with pip works fine
- name: Install Python requirements into the virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    requirements: "{{ item }}"
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/fmn/
    virtualenv_python: python3
  with_items:
    - "requirements.txt"
    - "dev-requirements.txt"
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

- name: Install fmn package into the Python 3 virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    name: file:///home/{{ ansible_env.SUDO_USER }}/devel
    extra_args: -e
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/fmn/
    virtualenv_python: python3
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

# - name: Install datanommer packages
#   become_user: "{{ ansible_env.SUDO_USER }}"
#   pip:
#     name: "{{ item }}"
#     virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/fmn/
#     virtualenv_python: python3
#   with_items:
#     - "datanommer.models"
#     - "datanommer.consumer"
#     - "psycopg2"
#   args:
#     chdir: /home/{{ ansible_env.SUDO_USER }}/devel

- name: Enable the RabbitMQ management console
  command: rabbitmq-plugins enable rabbitmq_management

- name: Start and enable redis
  service: name=redis state=started enabled=yes

- name: Start and enable RabbitMQ
  service: name=rabbitmq-server state=started enabled=yes

- name: Create user systemd directory
  become_user: "{{ ansible_env.SUDO_USER }}"
  file:
    path: /home/{{ ansible_env.SUDO_USER }}/.config/systemd/user/
    state: directory

- name: Install a fmn service files
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy:
    src: "{{ item }}"
    dest: /home/{{ ansible_env.SUDO_USER }}/.config/systemd/user/{{ item }}
  with_items:
    - "fedmsg-hub.service"
    - "fmn-backend.service"
    - "fmn-sse.service"
    - "fmn-worker@.service"
    - "fmn-celerybeat.service"
    - "flower.service"
    - "fmn-web.service"

- name: Reload the systemd daemon
  become_user: "{{ ansible_env.SUDO_USER }}"
  command: systemctl --user daemon-reload

- name: Install fedmsg config to ~/.fedmsg.d
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy:
    src: fedmsg.d/
    dest: /home/{{ ansible_env.SUDO_USER }}/.fedmsg.d

- name: Create fmn database
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && workon fmn && fmn-createdb -c --with-dev-data"
  args:
    creates: /var/tmp/fmn-dev-db.sqlite


- include: db.yml
